{"version":3,"file":"tigerlily.module.js","sources":["../node_modules/lodash.isplainobject/index.js","../node_modules/floodplains/dist/floodplains.module.js","../src/tigerlily.js","../node_modules/deep-for-each/es/index.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","function t(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,o=new Array(r);e<r;e++)o[e]=t[e];return o}function r(r,e){var o;if(\"undefined\"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(o=function(r,e){if(r){if(\"string\"==typeof r)return t(r,void 0);var o=Object.prototype.toString.call(r).slice(8,-1);return\"Object\"===o&&r.constructor&&(o=r.constructor.name),\"Map\"===o||\"Set\"===o?Array.from(r):\"Arguments\"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(r,void 0):void 0}}(r))||e&&r&&\"number\"==typeof r.length){o&&(r=o);var n=0;return function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}return(o=r[Symbol.iterator]()).next.bind(o)}function e(){this.callbacksLookup={}}e.prototype={emit:function(t,e){for(var o,n=this.callbacksLookup[\"*\"]||[],a=r(this.callbacksLookup[t]||[]);!(o=a()).done;)(0,o.value)({name:t,value:e});for(var l,i=r(n);!(l=i()).done;)(0,l.value)({name:t,value:e})},on:function(t,e){for(var o,n=r(Array.isArray(t)?t:[t]);!(o=n()).done;){var a=o.value;this.callbacksLookup[a]||(this.callbacksLookup[a]=[]),this.callbacksLookup[a].push(e)}}};export default e;\n//# sourceMappingURL=floodplains.module.js.map\n","/*\n\n# Tigerlily\nCreate an object that preserves its data across page loads!\n\n## Example code\n\n// will use existing data if present in localStorage, otherwise uses defaults\nconst persistentObject = tigerlily('jMpHXDYguqtS', {\n  defaults: {\n    some: [],\n    thing: {\n      another: 8\n    }\n  }\n});\n\npersistentObject.x = \"hello\";\n// page reload\npersistentObject.x === \"hello\"; // true\n\npersistentObject.num = 0;\npersistentObject.num++;\n\ntigerlily.on(\"*\", ({name, oldValue, newValue}) => {});\n\ntigerlily.on(\"num\", ({name, oldValue, newValue}) => {\n  console.log({name, oldValue, newValue});\n});\n\ntigerlily.on([\"x\", \"num\"], ({name, oldValue, newValue}) => {\n  console.log({name, oldValue, newValue});\n});\n\n*/\n\nimport deepForEach from 'deep-for-each';\nimport Floodplains from \"floodplains\";\nconst floodplains = new Floodplains();\n\nfunction tigerlily (dbName, options = {}) {\n  dbName = dbName || \"tigerlily\";\n\n  // get default options\n  const { defaults = {} } = options;\n\n  // get initial db state\n  let state = JSON.parse(localStorage.getItem(dbName) || \"{}\", jsonReviver);\n\n  // assign defaults as starting data (don't overwrite existing data)\n  state = Object.assign(defaults, state);\n\n  function boundHandler (rootRef) {\n    return {\n      get (obj, prop) {\n        if (isObjectOrArray(obj[prop])) {\n          // if nested value is an object or array, wrap it in a Proxy\n          return new Proxy(obj[prop], boundHandler(rootRef));\n        } else {\n          return obj[prop];\n        }\n      },\n      set (obj, prop, value) {\n        obj[prop] = value;\n        localStorage.setItem(dbName, JSON.stringify(rootRef, jsonReplacer));\n\n        // deep copy the old and new value so you can compare them if they're objects\n        let oldValueRef = obj[prop];\n        let oldValue = isObjectOrArray(oldValueRef) ? JSON.parse(JSON.stringify(oldValueRef, jsonReplacer), jsonReviver) : oldValueRef;\n        let newValue = isObjectOrArray(value) ? JSON.parse(JSON.stringify(value, jsonReplacer), jsonReviver) : value;\n        let path = getPathOfNestedObject(rootRef, value) || prop;\n        floodplains.emit(path, {prop, path, oldValue, value: newValue});\n\n        return true;\n      }\n    }\n  }\n\n  let proxiedObject = new Proxy(state, boundHandler(state));\n\n  return proxiedObject;\n\n}\n\ntigerlily.on = function (path, cb) {\n  floodplains.on(path, function (val) {\n    cb(val.value);\n  });\n}\n\n// UTILS\n\nfunction isObjectOrArray (val) {\n  return Array.isArray(val) || Object.prototype.toString.call(val) === \"[object Object]\";\n}\n\nfunction getPathOfNestedObject (root, nested) {\n  if (root === nested) {\n    return \"\";\n  }\n\n  let objPath = \"\";\n  deepForEach(root, (value, key, subject, path) => {\n    if (value === nested) {\n      objPath = path;\n    }\n  });\n\n  return objPath;\n}\n\nfunction jsonReplacer (key, value) {\n  if (this[key] instanceof Date) {\n    let ms = this[key].getTime();\n    return ms ? {__isDate: true, ms: ms} : undefined;\n  }\n  return value;\n}\n\nfunction jsonReviver (key, value) {\n  if (isObjectOrArray(value) && value.__isDate) {\n    return new Date(value.ms);\n  }\n  return value;\n}\n\nexport default tigerlily;\n\n\n","import isPlainObject from 'lodash.isplainobject';\n\nfunction forEachObject(obj, fn, path) {\n  for (const key in obj) {\n    const deepPath = path ? `${path}.${key}` : key; // Note that we always use obj[key] because it might be mutated by forEach\n\n    fn.call(obj, obj[key], key, obj, deepPath);\n    forEach(obj[key], fn, deepPath);\n  }\n}\n\nfunction forEachArray(array, fn, path) {\n  array.forEach((value, index, arr) => {\n    const deepPath = `${path}[${index}]`;\n    fn.call(arr, value, index, arr, deepPath); // Note that we use arr[index] because it might be mutated by forEach\n\n    forEach(arr[index], fn, deepPath);\n  });\n}\n\nfunction forEach(value, fn, path) {\n  path = path || '';\n\n  if (Array.isArray(value)) {\n    forEachArray(value, fn, path);\n  } else if (isPlainObject(value)) {\n    forEachObject(value, fn, path);\n  }\n}\n\nexport default forEach;"],"names":["func","transform","objectProto","Object","prototype","funcToString","Function","toString","hasOwnProperty","objectCtorString","call","objectToString","getPrototype","getPrototypeOf","arg","t","r","length","e","o","Array","Symbol","iterator","isArray","slice","constructor","name","from","test","n","done","value","TypeError","next","bind","this","callbacksLookup","emit","a","l","i","on","push","floodplains","Floodplains","tigerlily","dbName","options","defaults","state","JSON","parse","localStorage","getItem","jsonReviver","assign","Proxy","boundHandler","rootRef","get","obj","prop","isObjectOrArray","set","setItem","stringify","jsonReplacer","oldValueRef","oldValue","newValue","path","root","nested","objPath","forEach","fn","array","index","arr","deepPath","forEachArray","isObjectLike","result","isHostObject","proto","Ctor","isPlainObject","key","forEachObject","deepForEach","subject","getPathOfNestedObject","val","Date","ms","getTime","__isDate","undefined","cb"],"mappings":"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"}