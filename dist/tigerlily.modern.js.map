{"version":3,"file":"tigerlily.modern.js","sources":["../src/tigerlily.js"],"sourcesContent":["/*\n\n// uses existing db if present\nlet db = new tigerlily(\"jMpHXDYguqtS\", {\n  defaults: {\n    x: 123\n  }\n}); \n\ndb.x = \"hello\";\n// page reload\ndb.x === \"hello\"; // true\n\ndb.num = 0;\ndb.num++;\n\n\ndb.on(\"num\", ({name, oldValue, newValue}) => {\n  console.log({name, oldValue, newValue});\n});\n\ndb.on([\"x\", \"num\"], ({name, oldValue, newValue}) => {\n  console.log({name, oldValue, newValue});\n});\n\n*/\n\nexport default (dbName, options = {}) => {\n  if (typeof dbName !== \"string\") {\n    throw new Error('tigerlily requires a database name');\n  }\n\n  // get default options\n  const { defaults = {} } = options;\n\n  // get initial db state\n  let state = JSON.parse(localStorage.getItem(dbName) || \"{}\");\n\n  // assign defaults as starting data (don't overwrite existing data)\n  state = Object.assign(defaults, state);\n\n  function boundHandler (rootRef) {\n    return {\n      get (obj, prop) {\n        if (typeof obj[prop] === 'object' && obj[prop] !== null) {\n          // if nested object, wrap it in a Proxy\n          return new Proxy(obj[prop], boundHandler(rootRef));\n        } else {\n          return obj[prop];\n        }\n      },\n      set (obj, prop, value) {\n        obj[prop] = value;\n        localStorage.setItem(dbName, JSON.stringify(rootRef));\n        return true;\n      }\n    }\n  }\n\n  let proxiedObject = new Proxy(state, boundHandler(state));\n\n  proxiedObject.on = function () {};\n\n  return proxiedObject;\n\n}\n\n\n\n"],"names":["dbName","options","Error","defaults","state","JSON","parse","localStorage","getItem","Object","assign","proxiedObject","Proxy","boundHandler","rootRef","get","obj","prop","set","value","setItem","stringify","on"],"mappings":"eA2BgBA,EAAQC,EAAU,MAChC,GAAsB,iBAAXD,EACT,UAAUE,MAAM,sCAIlB,MAAMC,SAAEA,EAAW,IAAOF,EAG1B,IAAIG,EAAQC,KAAKC,MAAMC,aAAaC,QAAQR,IAAW,MAGvDI,EAAQK,OAAOC,OAAOP,EAAUC,GAoBhC,IAAIO,EAAgB,IAAIC,MAAMR,EAlB9B,SAASS,EAAcC,GACrB,MAAO,CACLC,IAAG,CAAEC,EAAKC,IACiB,iBAAdD,EAAIC,IAAoC,OAAdD,EAAIC,OAE5BL,MAAMI,EAAIC,GAAOJ,EAAaC,IAElCE,EAAIC,GAGfC,IAAG,CAAEF,EAAKC,EAAME,KACdH,EAAIC,GAAQE,EACZZ,aAAaa,QAAQpB,EAAQK,KAAKgB,UAAUP,SAMbD,CAAaT,IAIlD,OAFAO,EAAcW,GAAK,aAEZX"}